

echo "Downloading Ubuntu Cloud Image"
wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img

echo "Creating New VM"
qm create 9000 --memory 2048 --net0 virtio,bridge=vmbr0

# import the downloaded disk to local-lvm storage
qm importdisk 9000 bionic-server-cloudimg-amd64.img local-lvm

# finally attach the new disk to the VM as scsi drive
qm set 9000 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-9000-disk-1

Note 	Ubuntu Cloud-Init images require the virtio-scsi-pci controller type for SCSI drives.
screenshot/gui-cloudinit-hardware.png
Add Cloud-Init CDROM drive

The next step is to configure a CDROM drive which will be used to pass the Cloud-Init data to the VM.

qm set 9000 --ide2 local-lvm:cloudinit

To be able to boot directly from the Cloud-Init image, set the bootdisk parameter to scsi0, and restrict BIOS to boot from disk only. This will speed up booting, because VM BIOS skips the testing for a bootable CDROM.

qm set 9000 --boot c --bootdisk scsi0

Also configure a serial console and use it as a display. Many Cloud-Init images rely on this, as it is an requirement for OpenStack images.

qm set 9000 --serial0 socket --vga serial0

In a last step, it is helpful to convert the VM into a template. From this template you can then quickly create linked clones. The deployment from VM templates is much faster than creating a full clone (copy).

qm template 9000

